
BINARY SEARCH!
ONLY WORKS ON SORTED ARRAYS
ELIMINATE HALF REMAINING ELEMENTS PER STEP INSTEAD OF ONE PER STEP!

divide and conquer is the name of the game!
pick halfway point in array,
check if item is after or before your midpoint in array
if item is before, throw out array elements after midpoint
find a new midpoint between your old midpoint and the beginning of the array
repeat step 2-4 until item matches

what is the big o of binary search?
with 16 elements in an array, it takes 4 steps to find your query
to add another 'step' or operation we need to double the size of the input (the num of elements)
these are both good clues that the big o is O(log n)!!!

O(log n) is suuuuuuuper good!! so much so that on most graphs its pretty much graphed with O(1) (constant time!

the tradeoff though is that binary search only works on sorted arrays (and i want to venture to say sorted data structures in general)